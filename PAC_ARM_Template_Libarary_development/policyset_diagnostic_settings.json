{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/policySetDefinitions",
            "apiVersion": "2020-09-01",
            "name": "Deny-public-IP",
            "scope": "[concat('/providers/Microsoft.Management/managementGroups/', 'MGMT_ROOT')]",
            "properties": {
                "metadata": {
                    "version": "2.0.0",
                    "category": "Network"
                },
                "displayName": "Provision default configurations for Azure Monitor",
                "description": "Provision default configurations for Azure Monitor",
                "parameters": {
                    "effect": {
                        "type": "string",
                        "metadata": {
                            "displayName": "Effect",
                            "description": "Enable or disable the execution of the policy",
                            "allowedValues": [
                                "DeployIfNotExists",
                                "Disabled"

                            ],
                            "defaultValue": "DeployIfNotExists"
                        },
                        "profileName": {
                            "type": "String",
                            "metadata": {
                                "displayName": "Profile name",
                                "description": "The diagnostic settings profile name"
                            },
                            "defaultValue": "setbypolicy_eventHub"
                        },
                        "eventHubRuleId": {
                            "type": "String",
                            "metadata": {
                                "displayName": "Event Hub Authorization Rule Id",
                                "description": "The Event Hub authorization rule Id for Azure Diagnostics. The authorization rule needs to be at Event Hub namespace level. e.g. /subscriptions/{subscription Id}/resourceGroups/{resource group}/providers/Microsoft.EventHub/namespaces/{Event Hub namespace}/authorizationrules/{authorization rule}",
                                "strongType": "Microsoft.EventHub/Namespaces/AuthorizationRules",
                                "assignPermissions": true
                            }
                        },
                        "eventHubLocation": {
                            "type": "String",
                            "metadata": {
                                "displayName": "Event Hub Location",
                                "description": "The location the Event Hub resides in. Only Search Services in this location will be linked to this Event Hub.",
                                "strongType": "location"
                            },
                            "defaultValue": ""
                        },
                        "metricsEnabled": {
                            "type": "String",
                            "metadata": {
                                "displayName": "Enable metrics",
                                "description": "Whether to enable metrics stream to the Event Hub - True or False"
                            },
                            "allowedValues": [
                                "True",
                                "False"
                            ],
                            "defaultValue": "False"
                        },
                        "logsEnabled": {
                            "type": "String",
                            "metadata": {
                                "displayName": "Enable logs",
                                "description": "Whether to enable logs stream to the Event Hub  - True or False"
                            }

                        },
                        "logAnalytics": {
                            "type": "String",
                            "metadata": {
                                "displayName": "Log Analytics workspace",
                                "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                                "strongType": "omsWorkspace",
                                "assignPermissions": true
                            }
                        }
                    }
                },
                "policyDefinitions": [
                    {
                        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3d5da587-71bd-41f5-ac95-dd3330c2d58d",
                        "policyDefinitionReferenceId": "SearchServicesDeploytoEventHub",
                        "parameters": {
                            "effect": {
                                "value": "[[parameters('effect')]"
                            }
                            // },
                            // "profileName": {
                            //     "value": "[[parameters('profileName')]"
                            // },
                            // "eventHubRuleId": {
                            //     "value": "[[parameters('eventHubRuleId')]"
                            // },
                            // "eventHubLocation": {
                            //     "value": "[[parameters('eventHubLocation')]"
                            // },
                            // "metricsEnabled": {
                            //     "value": "[[parameters('metricsEnabled')]"
                            // },
                            // "logsEnabled": {
                            //     "value": "[[parameters('metricsEnabled')]"
                            // }

                        }
                    // },
                    // {
                    //     "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4daddf25-4823-43d4-88eb-2419eb6dcc08",
                    //     "policyDefinitionReferenceId": "DataLakeAnalyticsDeploytoEventHub",
                    //     "parameters": {
                    //         "effect": {
                    //             "value": "[[parameters('effect')]"
                    //         },
                    //         "profileName": {
                    //             "value": "[[parameters('profileName')]"
                    //         },
                    //         "eventHubRuleId": {
                    //             "value": "[[parameters('eventHubRuleId')]"
                    //         },
                    //         "eventHubLocation": {
                    //             "value": "[[parameters('eventHubLocation')]"
                    //         },
                    //         "metricsEnabled": {
                    //             "value": "[[parameters('metricsEnabled')]"
                    //         },
                    //         "logsEnabled": {
                    //             "value": "[[parameters('metricsEnabled')]"
                    //         }

                    //     }
                    // },
                    // {
                    //     "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/04d53d87-841c-4f23-8a5b-21564380b55e",
                    //     "policyDefinitionReferenceId": "DataLakeAnalyticsDeploytoEventHub",
                    //     "parameters": {
                    //         "effect": {
                    //             "value": "[[parameters('effect')]"
                    //         },
                    //         "profileName": {
                    //             "value": "[[parameters('profileName')]"
                    //         },
                    //         "logAnalytics": {
                    //             "value": "[[parameters('logAnalytics')]"
                    //         },
                    //         "metricsEnabled": {
                    //             "value": "[[parameters('metricsEnabled')]"
                    //         },
                    //         "logsEnabled": {
                    //             "value": "[[parameters('metricsEnabled')]"
                    //         }

                                            }
                ]
            }
        }
    ]
}